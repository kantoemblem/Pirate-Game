//Made by Camtech075 of SerenesForest
//Modified by Nintenlord

#include EAstdlib.event

EventPointerTable(0xC5,PortTown)

PortTown:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno Dunno Dunno
POIN Tutorial
POIN TrapData TrapData
POIN Units Units
POIN $0 $0 $0 $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
END_MAIN
ALIGN 32 //For some reason, CharacterBasedEvents have to be 32-Aligned?

CharacterBasedEvents:
CharacterEventBothWays(0x28,LivvyConvo, Ben, Livvy)
CharacterEventBothWays(0x27,AphiConvo, Ben, Aphi)
CharacterEventBothWays(0x26,ZoConvo, Ben, Zo)
CharacterEventBothWays(0x25,TedConvo, Ben, Ted)
CharacterEventBothWays(0x24,HexConvo, Ben, HexChamp)
CharacterEventBothWays(0x23,NateConvo, Ben, Nate)
CharacterEventBothWays(0x22,MaeConvo, Ben, Mae)
CharacterEventBothWays(0x21,OstConvo, Ben, Ostrava)
CharacterEventBothWays(0x20,NanaConvo, Ben, Nana)
CharacterEventBothWays(0x1F,MimiConvo, Ben, Mimi)
CharacterEventBothWays(0x1E,RoseConvo, Ben, Rose)
CharacterEventBothWays(0x1D,ZanosConvo, Ben, Zanos)
CharacterEventBothWays(0x1C,SonuConvo, Ben, Sonu)
END_MAIN

LocationBasedEvents:
Seize(0x0,EndofFreeMove,20,1)
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
END_MAIN

Dunno:
END_MAIN

Tutorial:
END_MAIN

TrapData:
ENDTRAP

ALIGN 4

Units:
UNIT Ben Commander 0x00 Level(1, Ally, 0) [18,3] 0x00 0x00 0x0 0x0 [0x5, 0xA1, 0x6D] NoAI 
UNIT Ben Acolyte 0x00 Level(1, Ally, 0) [17,2] 0x00 0x00 0x0 0x0 [0x81, 0x82, 0x6C] NoAI
UNIT Ben 0x1F 0x00 Level(1, Ally, 0) [16,3] 0x00 0x00 0x0 0x0 [0x1F, 0x28, 0x6C] NoAI
UNIT Ben 0x13 0x00 Level(1, Ally, 0) [19,4] 0x00 0x00 0x0 0x0 [0xD, 0x1, 0x6C] NoAI
UNIT Ben Fighter 0x00 Level(1, Ally, 0) [17,4] 0x00 0x00 0x0 0x0 [SteelAxe, 0x25, 0x6C] NoAI
UNIT Ben Supplier 0x00 Level(1, Ally, 0) [20,3] 0x00 0x00 0x0 0x0 [0x84, 0x18, 0x6D] NoAI
UNIT Ben 0x2D 0x00 Level(1, Ally, 0) [19,2] 0x00 0x00 0x0 0x0 [0x47, 0x45, 0x4B, 0x6C] NoAI
UNIT


Enemies:
UNIT 0x68 Pirate 0x00 Level(5, Enemy, 0) [1,12] 0x00 0x00 0x0 0x00 [0x20] [0x0, 0x3, 0x0, 0x0]
UNIT 0x7F Pirate 0x00 Level(1, Enemy, 0) [17,7] 0x00 0x00 0x0 0x00 [0x1F] [0x0, 0x0, 0x0, 0x0]
UNIT 0x7F Pirate 0x00 Level(1, Enemy, 0) [18,7] 0x00 0x00 0x0 0x00 [0x28] [0x0, 0x0, 0x0, 0x0]
UNIT 0x7F Soldier 0x00 Level(1, Enemy, 0) [13,8] 0x00 0x00 0x0 0x00 [0x14] [0x0, 0x0, 0x0, 0x0]
UNIT 0x7F Pirate 0x00 Level(1, Enemy, 0) [11,8] 0x00 0x00 0x0 0x00 [0x20] [0x0, 0x0, 0x0, 0x0]
UNIT 0x7F Pirate 0x00 Level(2, Enemy, 1) [14,13] 0x00 0x00 0x0 0x00 [0x1F] [0x0, 0x0, 0x0, 0x0]
UNIT 0x7F Mercenary 0x00 Level(1, Enemy, 0) [18,12] 0x00 0x00 0x0 0x00 [0x1] [0x0, 0x0, 0x0, 0x0]
UNIT 0x7F Archer 0x00 Level(1, Enemy, 0) [20,13] 0x00 0x00 0x0 0x00 [0x2D] [0x0, 0x0, 0x0, 0x0]
UNIT 0x7F Pirate 0x00 Level(1, Enemy, 0) [18,15] 0x00 0x00 0x0 0x00 [0x20] [0x0, 0x3, 0x0, 0x0]
UNIT 0x7F Soldier 0x00 Level(3, Enemy, 1) [18,17] 0x00 0x00 0x0 0x00 [0x14] [0x0, 0x3, 0x0, 0x0]
UNIT 0x7F Pirate 0x00 Level(1, Enemy, 0) [17,7] 0x00 0x00 0x0 0x00 [0x1F] [0x0, 0x0, 0x0, 0x0]
UNIT 0x7F Cavalier 0x00 Level(1, Enemy, 0) [16,14] 0x00 0x00 0x0 0x00 [0x14] [0x0, 0x0, 0x0, 0x0]
UNIT 0x7F Archer 0x00 Level(1, Enemy, 0) [11,15] 0x00 0x00 0x0 0x00 [0x2D] [0x0, 0x3, 0x0, 0x0]
UNIT 0x7F Soldier 0x00 Level(1, Enemy, 0) [16,9] 0x00 0x00 0x0 0x00 [0x14] [0x0, 0x0, 0x0, 0x0]
UNIT 0x7F Pirate 0x00 Level(3, Enemy, 1) [14,17] 0x00 0x00 0x0 0x00 [0x1F] [0x0, 0x3, 0x0, 0x0]
UNIT 0x7F Pirate 0x00 Level(3, Enemy, 1) [9,12] 0x00 0x00 0x0 0x00 [0x1F] [0x0, 0x0, 0x0, 0x0]
UNIT 0x7F Myrmidon 0x00 Level(3, Enemy, 1) [8,13] 0x00 0x00 0x0 0x00 [0x1] [0x0, 0x3, 0x0, 0x0]
UNIT 0x7F Myrmidon 0x00 Level(3, Enemy, 1) [7,16] 0x00 0x00 0x0 0x00 [0xF] [0x0, 0x3, 0x0, 0x0]
UNIT 0x7F Pirate 0x00 Level(1, Enemy, 0) [19,13] 0x00 0x00 0x0 0x00 [0x1F] [0x0, 0x0, 0x0, 0x0]
UNIT 0x7F Fighter 0x00 Level(3, Enemy, 1) [7,6] 0x00 0x00 0x0 0x00 [0x20] [0x0, 0x12, 0x0, 0x0]
UNIT 0x7F Mercenary 0x00 Level(3, Enemy, 1) [6,5] 0x00 0x00 0x0 0x00 [0x3] [0x0, 0x12, 0x0, 0x0]
UNIT 0x7F Soldier 0x00 Level(3, Enemy, 1) [17,7] 0x00 0x00 0x0 0x00 [0x16] [0x0, 0x12, 0x0, 0x0]
UNIT 0x7F Mage 0x00 Level(3, Enemy, 1) [6,6] 0x00 0x00 0x0 0x00 [0x38] [0x0, 0x12, 0x0, 0x0]
UNIT 0x7F Soldier 0x00 Level(1, Enemy, 0) [14,15] 0x2 0x00 0x0 0x0 [0x14, 0x5D] [0x3, 0x3, 0x0, 0x0]
UNIT 0x7F Soldier 0x00 Level(1, Enemy, 0) [16,17] 0x2 0x00 0x0 0x0 [0x14, 0x61] [0x3, 0x3, 0x0, 0x0]
UNIT 0x7F Fighter 0x00 Level(5, Enemy, 1) [6,12] 0x00 0x00 0x0 0x00 [0x20] [0x0, 0x0, 0x0, 0x20]
UNIT 0x7F Pirate 0x00 Level(4, Enemy, 1) [16,16] 0x00 0x00 0x0 0x00 [0x20] [0x0, 0x0, 0x0, 0x20]
UNIT 0x80 Fighter 0x00 Level(5, Enemy, 1) [1,8] 0x00 0x00 0x0 0x00 [0x20] [0x0, 0x0, 0x0, 0x20]
UNIT


BeginningScene:
ENDA

EndingScene:
NoFade
ENDA

LivvyConvo:
    MUSI //Lower Music Volume
	ENUF 0x28 //Flag Off
    TEXTSHOW(LivvyTalk) //Show Conversation
	TEXTEND
	CHECK_EVENTID 0x1B //Check if Flag 1B is ON
	SVAL 0x7 0x1
    BEQ 0x1 0xC 0x7 //If it is, skip to the end, if its not, proceed.
	TEXTSHOW2(AddToVanguard) //Show the AddToVanguard Text
	TEXTEND
	SVAL 0x7 0x1
    BEQ 0x0 0xC 0x7 //Branch Event, if you say yes, jump to label 0, proceed if No.
	ENUN //Wait
	GOTO 0x1 //GOTO Label
	LABEL 0x0 //Label 0x0
	ENUT 0x28 //Flag On
	COUNTER_ADD 0x0 0x1
	TEXTSHOW2(LivvyAccept) //Show Accept Conversation
	TEXTEND
	CALL(CounterCheck)
	LABEL 0x1 //Label
	REMA
    MUNO //Return Music volume
    MURE 2 //At a specified speed
    NoFade 
    ENDA

AphiConvo:
    MUSI //Lower Music Volume
	ENUF 0x27 //Flag Off
    TEXTSHOW(AphiTalk) //Show Conversation
	TEXTEND
	EVBIT_F 0x2
	CHECK_EVENTID 0x1B //Check if Flag 1B is ON
	SVAL 0x7 0x1
    BEQ 0x1 0xC 0x7 //If it is, skip to the end, if its not, proceed.
	TEXTSHOW2(AddToVanguard) //Show the AddToVanguard Text
	TEXTEND
	SVAL 0x7 0x1
    BEQ 0x0 0xC 0x7 //Branch Event, if you say yes, jump to label 0, proceed if No.
	ENUN //Wait
	GOTO 0x1 //GOTO Label
	LABEL 0x0 //Label 0x0
	ENUT 0x27 //Flag On
	COUNTER_ADD 0x0 0x1
	TEXTSHOW2(AphiAccept) //Show Accept Conversation
	TEXTEND
	CALL(CounterCheck)
	LABEL 0x1 //Label
	REMA
    MUNO //Return Music volume
    MURE 2 //At a specified speed
    NoFade 
    ENDA

ZoConvo:
    MUSI //Lower Music Volume
	ENUF 0x26 //Flag Off
    TEXTSHOW(ZoTalk) //Show Conversation
	TEXTEND
	EVBIT_F 0x2
	CHECK_EVENTID 0x1B //Check if Flag 1B is ON
	SVAL 0x7 0x1
    BEQ 0x1 0xC 0x7 //If it is, skip to the end, if its not, proceed.
	TEXTSHOW2(AddToVanguard) //Show the AddToVanguard Text
	TEXTEND
	SVAL 0x7 0x1
    BEQ 0x0 0xC 0x7 //Branch Event, if you say yes, jump to label 0, proceed if No.
	ENUN //Wait
	GOTO 0x1 //GOTO Label
	LABEL 0x0 //Label 0x0
	ENUT 0x26 //Flag On
	COUNTER_ADD 0x0 0x1
	TEXTSHOW2(ZoAccept) //Show Accept Conversation
	TEXTEND
	CALL(CounterCheck)
	LABEL 0x1 //Label
	REMA
    MUNO //Return Music volume
    MURE 2 //At a specified speed
    NoFade 
    ENDA

TedConvo:
    MUSI //Lower Music Volume
	ENUF 0x25 //Flag Off
    TEXTSHOW(TedTalk) //Show Conversation
	TEXTEND
	CHECK_EVENTID 0x1B //Check if Flag 1B is ON
	SVAL 0x7 0x1
    BEQ 0x1 0xC 0x7 //If it is, skip to the end, if its not, proceed.
	TEXTSHOW2(AddToVanguard) //Show the AddToVanguard Text
	TEXTEND
	SVAL 0x7 0x1
    BEQ 0x0 0xC 0x7 //Branch Event, if you say yes, jump to label 0, proceed if No.
	ENUN //Wait
	GOTO 0x1 //GOTO Label
	LABEL 0x0 //Label 0x0
	ENUT 0x25 //Flag On
	COUNTER_ADD 0x0 0x1
	TEXTSHOW2(TedAccept) //Show Accept Conversation
	TEXTEND
	CALL(CounterCheck)
	LABEL 0x1 //Label
	REMA
    MUNO //Return Music volume
    MURE 2 //At a specified speed
    NoFade 
    ENDA

HexConvo:
    MUSI //Lower Music Volume
	ENUF 0x24 //Flag Off
    TEXTSHOW(HexTalk) //Show Conversation
	TEXTEND
	CHECK_EVENTID 0x1B //Check if Flag 1B is ON
	SVAL 0x7 0x1
    BEQ 0x1 0xC 0x7 //If it is, skip to the end, if its not, proceed.
	TEXTSHOW2(AddToVanguard) //Show the AddToVanguard Text
	TEXTEND
	SVAL 0x7 0x1
    BEQ 0x0 0xC 0x7 //Branch Event, if you say yes, jump to label 0, proceed if No.
	ENUN //Wait
	GOTO 0x1 //GOTO Label
	LABEL 0x0 //Label 0x0
	ENUT 0x24 //Flag On
	COUNTER_ADD 0x0 0x1
	TEXTSHOW2(HexAccept) //Show Accept Conversation
	TEXTEND
	CALL(CounterCheck)
	LABEL 0x1 //Label
	REMA
    MUNO //Return Music volume
    MURE 2 //At a specified speed
    NoFade 
    ENDA

NateConvo:
    MUSI //Lower Music Volume
	ENUF 0x23 //Flag Off
    TEXTSHOW(NateTalk) //Show Conversation
	TEXTEND
	CHECK_EVENTID 0x1B //Check if Flag 1B is ON
	SVAL 0x7 0x1
    BEQ 0x1 0xC 0x7 //If it is, skip to the end, if its not, proceed.
	TEXTSHOW2(AddToVanguard) //Show the AddToVanguard Text
	TEXTEND
	SVAL 0x7 0x1
    BEQ 0x0 0xC 0x7 //Branch Event, if you say yes, jump to label 0, proceed if No.
	ENUN //Wait
	GOTO 0x1 //GOTO Label
	LABEL 0x0 //Label 0x0
	ENUT 0x23 //Flag On
	COUNTER_ADD 0x0 0x1
	TEXTSHOW2(NateAccept) //Show Accept Conversation
	TEXTEND
	CALL(CounterCheck)
	LABEL 0x1 //Label
	REMA
    MUNO //Return Music volume
    MURE 2 //At a specified speed
    NoFade 
    ENDA

MaeConvo:
    MUSI //Lower Music Volume
	ENUF 0x22 //Flag Off
    TEXTSHOW(MaeTalk) //Show Conversation
	TEXTEND
	CHECK_EVENTID 0x1B //Check if Flag 1B is ON
	SVAL 0x7 0x1
    BEQ 0x1 0xC 0x7 //If it is, skip to the end, if its not, proceed.
	TEXTSHOW2(AddToVanguard) //Show the AddToVanguard Text
	TEXTEND
	SVAL 0x7 0x1
    BEQ 0x0 0xC 0x7 //Branch Event, if you say yes, jump to label 0, proceed if No.
	ENUN //Wait
	GOTO 0x1 //GOTO Label
	LABEL 0x0 //Label 0x0
	ENUT 0x22 //Flag On
	COUNTER_ADD 0x0 0x1
	TEXTSHOW2(MaeAccept) //Show Accept Conversation
	TEXTEND
	CALL(CounterCheck)
	LABEL 0x1 //Label
	REMA
    MUNO //Return Music volume
    MURE 2 //At a specified speed
    NoFade 
    ENDA

OstConvo:
    MUSI //Lower Music Volume
	ENUF 0x21 //Flag Off
    TEXTSHOW(OstTalk) //Show Conversation
	TEXTEND
	CHECK_EVENTID 0x1B //Check if Flag 1B is ON
	SVAL 0x7 0x1
    BEQ 0x1 0xC 0x7 //If it is, skip to the end, if its not, proceed.
	TEXTSHOW2(AddToVanguard) //Show the AddToVanguard Text
	TEXTEND
	SVAL 0x7 0x1
    BEQ 0x0 0xC 0x7 //Branch Event, if you say yes, jump to label 0, proceed if No.
	ENUN //Wait
	GOTO 0x1 //GOTO Label
	LABEL 0x0 //Label 0x0
	ENUT 0x21 //Flag On
	COUNTER_ADD 0x0 0x1
	TEXTSHOW2(OstAccept) //Show Accept Conversation
	TEXTEND
	CALL(CounterCheck)
	LABEL 0x1 //Label
	REMA
    MUNO //Return Music volume
    MURE 2 //At a specified speed
    NoFade 
    ENDA

NanaConvo:
    MUSI //Lower Music Volume
	ENUF 0x20 //Flag Off
    TEXTSHOW(NanaTalk) //Show Conversation
	TEXTEND
	CHECK_EVENTID 0x1B //Check if Flag 1B is ON
	SVAL 0x7 0x1
    BEQ 0x1 0xC 0x7 //If it is, skip to the end, if its not, proceed.
	TEXTSHOW2(AddToVanguard) //Show the AddToVanguard Text
	TEXTEND
	SVAL 0x7 0x1
    BEQ 0x0 0xC 0x7 //Branch Event, if you say yes, jump to label 0, proceed if No.
	ENUN //Wait
	GOTO 0x1 //GOTO Label
	LABEL 0x0 //Label 0x0
	ENUT 0x20 //Flag On
	COUNTER_ADD 0x0 0x1
	TEXTSHOW2(NanaAccept) //Show Accept Conversation
	TEXTEND
	CALL(CounterCheck)
	LABEL 0x1 //Label
	REMA
    MUNO //Return Music volume
    MURE 2 //At a specified speed
    NoFade 
    ENDA

MimiConvo:
    MUSI //Lower Music Volume
	ENUF 0x1F //Flag Off
    TEXTSHOW(MimiTalk) //Show Conversation
	TEXTEND
	CHECK_EVENTID 0x1B //Check if Flag 1B is ON
	SVAL 0x7 0x1
    BEQ 0x1 0xC 0x7 //If it is, skip to the end, if its not, proceed.
	TEXTSHOW2(AddToVanguard) //Show the AddToVanguard Text
	TEXTEND
	SVAL 0x7 0x1
    BEQ 0x0 0xC 0x7 //Branch Event, if you say yes, jump to label 0, proceed if No.
	ENUN //Wait
	GOTO 0x1 //GOTO Label
	LABEL 0x0 //Label 0x0
	ENUT 0x1F //Flag On
	COUNTER_ADD 0x0 0x1
	TEXTSHOW2(MimiAccept) //Show Accept Conversation
	TEXTEND
	CALL(CounterCheck)
	LABEL 0x1 //Label
	REMA
    MUNO //Return Music volume
    MURE 2 //At a specified speed
    NoFade 
    ENDA

RoseConvo:
    MUSI //Lower Music Volume
	ENUF 0x1E //Flag Off
    TEXTSHOW(RoseTalk) //Show Conversation
	TEXTEND
	CHECK_EVENTID 0x1B //Check if Flag 1B is ON
	SVAL 0x7 0x1
    BEQ 0x1 0xC 0x7 //If it is, skip to the end, if its not, proceed.
	TEXTSHOW2(AddToVanguard) //Show the AddToVanguard Text
	TEXTEND
	SVAL 0x7 0x1
    BEQ 0x0 0xC 0x7 //Branch Event, if you say yes, jump to label 0, proceed if No.
	ENUN //Wait
	GOTO 0x1 //GOTO Label
	LABEL 0x0 //Label 0x0
	ENUT 0x1E //Flag On
	COUNTER_ADD 0x0 0x1
	TEXTSHOW2(RoseAccept) //Show Accept Conversation
	TEXTEND
	CALL(CounterCheck)
	LABEL 0x1 //Label
	REMA
    MUNO //Return Music volume
    MURE 2 //At a specified speed
    NoFade 
    ENDA

ZanosConvo:
    MUSI //Lower Music Volume
	ENUF 0x1D //Flag Off
    TEXTSHOW(ZanosTalk) //Show Conversation
	TEXTEND
	CHECK_EVENTID 0x1B //Check if Flag 1B is ON
	SVAL 0x7 0x1
    BEQ 0x1 0xC 0x7 //If it is, skip to the end, if its not, proceed.
	TEXTSHOW2(AddToVanguard) //Show the AddToVanguard Text
	TEXTEND
	SVAL 0x7 0x1
    BEQ 0x0 0xC 0x7 //Branch Event, if you say yes, jump to label 0, proceed if No.
	ENUN //Wait
	GOTO 0x1 //GOTO Label
	LABEL 0x0 //Label 0x0
	ENUT 0x1D //Flag On
	COUNTER_ADD 0x0 0x1
	TEXTSHOW2(ZanosAccept) //Show Accept Conversation
	TEXTEND
	CALL(CounterCheck)
	LABEL 0x1 //Label
	REMA
    MUNO //Return Music volume
    MURE 2 //At a specified speed
    NoFade 
    ENDA

SonuConvo:
    MUSI //Lower Music Volume
	ENUF 0x1C //Flag Off
    TEXTSHOW(SonuTalk) //Show Conversation
	TEXTEND
	CHECK_EVENTID 0x1B //Check if Flag 1B is ON
	SVAL 0x7 0x1
    BEQ 0x1 0xC 0x7 //If it is, skip to the end, if its not, proceed.
	TEXTSHOW2(AddToVanguard) //Show the AddToVanguard Text
	TEXTEND
	SVAL 0x7 0x1
    BEQ 0x0 0xC 0x7 //Branch Event, if you say yes, jump to label 0, proceed if No.
	ENUN //Wait
	GOTO 0x1 //GOTO Label
	LABEL 0x0 //Label 0x0
	ENUT 0x1C //Flag On
	COUNTER_ADD 0x0 0x1
	TEXTSHOW2(SonuAccept) //Show Accept Conversation
	TEXTEND
	CALL(CounterCheck)
	LABEL 0x1 //Label
	REMA
    MUNO //Return Music volume
    MURE 2 //At a specified speed
    NoFade 
    ENDA

CounterCheck:
	COUNTER_CHECK 0x0 //Check the counter
	SVAL 0x7 0x6
	BNE 0x0 0xC 0x7 
	REMA
	ENUT 0x1B 
	TEXTSHOW(VanguardComplete)
	TEXTEND
	LABEL 0x0
	NoFade
	ENDA
	
EndofFreeMove:
	Text(EndFreeMove1)
	ENUF 0x3
	Text(EndFreeMove2)
	SVAL 0x7 0x1
	BNE 0x0 0xC 0x7 //Branch Event
	FADI 0xF
	ClearAll
	ASMC ASMC_EndFreeMovement
	LOMA 0x0
	CALL(UnitSorter)
	CALL(ChapterStart)
	ENUF 0x84
	CALL 0x591FD8
	LABEL 0x0
	NoFade
	ENDA
	
UnitSorter:
	REMU 0x2
	REMU 0x3
	REMU 0x4
	REMU 0x5
	REMU 0x6
	REMU 0x7
	REMU 0x8
	REMU 0x9
	REMU 0xA
	REMU 0xB
	REMU 0xC
	REMU 0xD
	REMU 0xE
	CHECK_EVENTID 0x28
	SVAL 0x7 0x1
	BNE 0x0 0xC 0x7
	REVEAL 0x2
	LABEL 0x0
	CHECK_EVENTID 0x27
	SVAL 0x7 0x1
	BNE 0x1 0xC 0x7
	REVEAL 0x3
	LABEL 0x1
	CHECK_EVENTID 0x26
	SVAL 0x7 0x1
	BNE 0x2 0xC 0x7
	REVEAL 0x4
	LABEL 0x2
	CHECK_EVENTID 0x25
	SVAL 0x7 0x1
	BNE 0x3 0xC 0x7
	REVEAL 0x5
	LABEL 0x3
	CHECK_EVENTID 0x24
	SVAL 0x7 0x1
	BNE 0x4 0xC 0x7
	REVEAL 0x6
	LABEL 0x4
	CHECK_EVENTID 0x23
	SVAL 0x7 0x1
	BNE 0x5 0xC 0x7
	REVEAL 0x7
	LABEL 0x5
	CHECK_EVENTID 0x22
	SVAL 0x7 0x1
	BNE 0x6 0xC 0x7
	REVEAL 0x8
	LABEL 0x6
	CHECK_EVENTID 0x21
	SVAL 0x7 0x1
	BNE 0x7 0xC 0x7
	REVEAL 0x9
	LABEL 0x7
	CHECK_EVENTID 0x20
	SVAL 0x7 0x1
	BNE 0x8 0xC 0x7
	REVEAL 0xA
	LABEL 0x8
	CHECK_EVENTID 0x1F
	SVAL 0x7 0x1
	BNE 0x9 0xC 0x7
	REVEAL 0xB
	LABEL 0x9
	CHECK_EVENTID 0x1E
	SVAL 0x7 0x1
	BNE 0xA 0xC 0x7
	REVEAL 0xC
	LABEL 0xA
	CHECK_EVENTID 0x1D
	SVAL 0x7 0x1
	BNE 0xB 0xC 0x7
	REVEAL 0xD
	LABEL 0xB
	CHECK_EVENTID 0x1C
	SVAL 0x7 0x1
	BNE 0xC 0xC 0x7
	REVEAL 0xE
	LABEL 0xC
	NoFade
	ENDA

ChapterStart:
	LOAD3 0x1 Units
	LOAD2 0x0 Enemies
	FADU 0x16
	CAM1 0x1	
	CUMO 0x1
	STAL 60
	CURE
	NoFade
	ENDA
	
EndActions:
	SET_ENDTURN 0x1
	SET_ENDTURN 0x2
	SET_ENDTURN 0x3
	SET_ENDTURN 0x4
	SET_ENDTURN 0x5
	SET_ENDTURN 0x6
	SET_ENDTURN 0x7
	SET_ENDTURN 0x8
	SET_ENDTURN 0x9
	SET_ENDTURN 0xA
	SET_ENDTURN 0xB
	SET_ENDTURN 0xC
	SET_ENDTURN 0xD
	SET_ENDTURN 0xE
	NoFade
	ENDA

MESSAGE Events end at offset CURRENTOFFSET