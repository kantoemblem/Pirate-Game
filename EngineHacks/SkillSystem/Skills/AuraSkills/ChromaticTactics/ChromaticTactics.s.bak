.equ ChromaticTacticsID, AuraSkillCheck+4
.equ GetUnit, 0x8019431
.thumb
push {r4-r7,lr}
@goes in the battle loop.
@r0 is the attacker
@r1 is the defender
mov r4, r0
mov r5, r1

@now check for the skill
ldr r0, AuraSkillCheck
mov lr, r0
mov r0, r4 @attacker
ldr r1, ChromaticTacticsID
mov r2, #0 @are allies
mov r3, #2 @range
.short 0xf800
cmp r0, #0
beq End

@We shouldn't need the loop here if only one unit can have the skill

@Get unit data from unit ID
ldrb r0,[r1]
ldr r1, =GetUnit
mov lr, r1
.short 0xf800 @r0 = unit data pointer

mov r1, #0x1E @avoid using r0, as it has data we need
ldrb r0, [r0, r1] @load from address in r0. We can store to r0 after loading since we got all the data we need
cmp r0, #0x38 @Fire Tome
beq FireTome
cmp r0, #0x39 @ThunderTome
beq ThunderTome

FireTome:
mov r0, r4
add     r0,#0x5A    @Move to the attacker's damage.
ldrh    r3,[r0]     @Load the attacker's damage into r3.
add     r3,#2    @add 2 to the attacker's damage.
strh    r3,[r0]     @Store attacker avoid.


End:
pop {r4-r7}
pop {r0}
bx r0
.align
.ltorg
AuraSkillCheck:
@ POIN AuraSkillCheck
@ WORD ChromaticTacticsID

